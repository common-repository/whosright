<?php
/*
Plugin Name: WhosRight
Plugin URI: http://whosright.com/
Description: Polling and commenting system
Version: 2.1-2366
Author: Consensus Media LLC
Author URI: http://whosright.com/
License: GPLv2
*/
?><?php
	require_once('config.php');
	require_once('WhosRightApiV1.php');
	
	$whosright_api = new WhosRightApiV1(get_option('whosright_api_key'), get_option('whosright_api_token'), get_option('whosright_api_host').'/api/v1/');
	require_once('render_functions.php'); 
	
/*
	add_action('the_post', 'wr_checksingle');
	function wr_checksingle() {
		echo 'plugin initializing<br />';
		echo 'GET<br />';
		print_r($_GET);
		global $post;
		echo 'POST<br />';
		print_r($post);
		if (isset($_GET['no_layout'])) {
			$whosrightpoll = new WhosrightPoll($post->ID);
			$mode = 'full';
			if (isset($_GET['mode'])) { $mode = $_GET['mode']; }
			if ($mode == 'full') {
				$whosrightpoll->render_poll();
			} else {
				$whosrightpoll->render_poll_short();
			}
			exit();
		}
	}
*/

/*
	add_action( 'init', 'init_whosright' );
	function init_whosright() {
		register_post_type( 'wr_poll',
			array(
				'labels' => array(
					'name' => __( "Polls" ),
					'singular_name' => __( 'Poll' ),
				),
				'public' => true,
				'rewrite' => array('slug' => 'polls'),
				'menu_position' => 5,
				'supports' => array('')
			)
		);
	}
*/

/*
	add_filter( 'pre_get_posts', 'wr_get_posts' );
	function wr_get_posts( $query ) {

		if ( is_home() && false == $query->query_vars['suppress_filters'] )
			$query->set( 'post_type', array( 'post', 'wr_poll', 'movie', 'quote', 'attachment' ) );

		return $query;
	}
*/

/*
	add_filter('edit_form_advanced', 'wr_edit_form');
	function wr_edit_form() {
		$url = get_option('siteurl')."/wp-content/plugins/whosright";
		if (isset($_GET['post'])) {
			$wr_id = get_post_meta($_GET['post'], '_whosright_id', true);
			$wr = new WhosRightApiV1(WR_API_KEY, WR_API_TOKEN, WR_API_URL);
			$poll_data_json = $wr->getPoll($wr_id);
			$data = json_decode($poll_data_json, true);
			$poll = $data['post'];
			//print_r($post);
		}
		echo '<pre>'>
		print_r($poll);
		print_r($post);
		echo '</pre>';
		require_once('admin/edit.php');
	}
*/

	add_filter('get_comments_number', 'wr_get_comment_count');
	function wr_get_comment_count() {
		global $post;
		$whosright_id = get_post_meta($post->ID, '_whosright_id', true);
		if ($whosright_id) {
			$comment_count = get_post_meta($post->ID, '_whosright_comment_count', true);
			$comment_count_timestamp = get_post_meta($post->ID, '_whosright_comment_count_timestamp', true);
			$refresh = false;
			if ($comment_count_timestamp) {
				if (time() - $comment_count_timestamp > 5*60) { // cache for 5 minutes
					$refresh = true;
				}
			} else {
				$refresh = true;
			}
			if ($refresh) {
				$wr_poll = new WhosrightPoll($post->ID);
				update_post_meta($post->ID, '_whosright_comment_count', $wr_poll->getCommentCount());
				update_post_meta($post->ID, '_whosright_comment_count_timestamp', time());
			}
			return get_post_meta($post->ID, '_whosright_comment_count', true);
		}
		return 0;
	}

	add_action('admin_menu', 'wr_add_custom_fields');
	function wr_add_custom_fields() {
		add_meta_box('wr-custom-fields', 'WhosRight', 'wr_display_custom_fields', 'post', 'normal', 'high');
		add_meta_box('wr-custom-fields', 'WhosRight', 'wr_display_custom_fields', 'page', 'normal', 'high');
	}

	function wr_display_custom_fields() {
		global $post;
		global $whosright_api;
		$url = get_option('siteurl')."/wp-content/plugins/whosright";
		global $wr_user;
		$wr_user = json_decode($whosright_api->getAdmin(), true);
		if (isset($_GET['post'])) {
			$wr_id = get_post_meta($_GET['post'], '_whosright_id', true);
			$auto_gen = get_post_meta($_GET['post'], '_whosright_autogenerated', true);
			if ($auto_gen == '' && $wr_id) {
				//echo 'this is real, id='.$wr_id;
				$poll_data_json = $whosright_api->getPoll($wr_id);
				//echo $poll_data_json;
				$data = json_decode($poll_data_json, true);
				$poll = $data['post'];
			} else if (!$wr_id) {
				$poll = array();
				$custom_fields = get_post_custom($_GET['post']);
				foreach($custom_fields as $key => $values) {
					if (substr($key, 0, 11) == '_whosright_') {
						$poll[substr($key, 11)] = $values[0];
						//echo '<br />'.$key.'=';print_r($values, false);
					}
				}
				$num = 1;
				while (isset($poll['option_'.$num])) {
					$option = array('option_index' => $num - 1, 'title' => $poll['option_'.$num]);
					if (isset($poll['attach_media_'.$num])) {
						$option['attach'] = $poll['attach_media_'.$num];
					}
					$poll['options'][] = $option;
					$num++;
				}
			}
			//print_r($post);
		}
		//echo '<pre>'>
		//print_r($poll);
		//print_r($post);
		//echo '</pre>';
		require_once('admin/edit.php');
	}

	add_filter('delete_post', 'wr_delete_post');
	add_filter('delete_page', 'wr_delete_post');
	function wr_delete_post() {
		global $post_type;
		global $whosright_api;

		$url = get_option('siteurl')."/wp-content/plugins/whosright";
		if (isset($_GET['post'])) {
			$wr_id = get_post_meta($_GET['post'], '_whosright_id', true);
			$poll_data_json = $whosright_api->deletePoll($wr_id);
		}
	}
	
	add_action('save_post', 'wr_save_post');
	add_action('save_page', 'wr_save_page');
	function wr_save_post($post_id) {
		global $whosright_api;
		//echo 'SAVE<pre >';
/*
		echo "post:";
		print_r($post);
		echo "_POST:";
		print_r($_POST);
*/

//print_r($_POST);
		$post_id = isset($_POST['ID']) ? $_POST['ID'] : $post_id;
		$data = array();
		foreach($_POST as $key => $value) {
			if (substr($key, 0, 10) == 'whosright_') {
				$data[substr($key, 10)] = $value;
				update_post_meta($post_id, "_".$key, $value);
			}
		}
		if (count($data) > 0) {
			//echo '<pre>';
			//print_r($data);

			//echo $response;

			if (isset($_POST['whosright_new_poll'])) {
				//$response = $whosright_api->addPoll($data);
				//$response_json = json_decode($response, true);
				//$post = get_post($post_id);
				if (isset($_POST['visibility']) && $_POST['visibility'] == 'private' || $_POST['visibility'] == 'future') {
				//if ($post->post_status == 'private' || $post->post_status == 'future') {
					//echo 'private - manually publishing';
					update_post_meta($post_id, '_whosright_published', false);
					wr_publish_post($post_id);
				}
				//print_r($post);
				//echo $response;
			} else { // edit
				//echo 'EDIT';
				//print_r($data);
				//echo 'editing poll';
				if ($_POST['visibility'] == 'private' || $_POST['visibility'] == 'future') {
					$data['published'] = false;
				} else {
					$data['published'] = true;
				}
				//print_r($_POST);
				//print_r($data);
				//if (in_array( strtolower( ini_get( 'magic_quotes_gpc' ) ), array( '1', 'on' ) ) ) {
					$data = array_map( 'stripslashes', $data );
				//}

				$response = $whosright_api->editPoll($data);
				if ($response[0] != '[' && $response[0] != '{') {
					update_post_meta($post_id, '_whosright_error', $response);
				} else {
					//echo '<hr />';
					//echo $response;
					//update_post_meta($post_id, '_whosright_error', $response);
					$response_json = json_decode($response, true);
					if (isset($response_json['error'])) {
						update_post_meta($post_id, '_whosright_error', $response_json['error']);
					}
				}
				//echo $response;
			}

			//echo 'saved';
			//exit();
		}
	}

	//$whosright_publish = true;
	add_action('transition_post_status', 'whosright_transition', 10, 3);
	function whosright_transition($new_status, $old_status, $post) {
		//echo 'Transition on post '.$post->ID.' from '.$old_status.' to '.$new_status;
		//global $whosright_publish;
		//echo 'transition to '.$new_status;
		$wr_id = get_post_meta($post->ID, '_whosright_id', true);
		//echo $wr_id;
		if ($new_status == 'private' || $new_status == 'future') {
			update_post_meta($post->ID, '_whosright_published', false);
		} else if ($new_status == 'publish') {
			update_post_meta($post->ID, '_whosright_published', true);
		}
	}

	add_action('publish_post', 'wr_publish_post');
	add_action('publish_page', 'wr_publish_post');
	function wr_publish_post($post_id) {
		//echo 'publish';
		$custom_fields = get_post_custom($post_id);
		//echo '<br /><br />';
		//echo 'POST META:';
		//print_r($custom_fields);
		$data = array();
		foreach($custom_fields as $key => $values) {
			if (substr($key, 0, 11) == '_whosright_') {
				$data[substr($key, 11)] = $values[0];
				//echo '<br />'.$key.'=';print_r($values, false);
			}
		}
		//global $whosright_publish;
		//$data['published'] = $whosright_publish;
		//echo '<br /><br />PUBLISH';
		//print_r($data);
		global $whosright_api;
		$wr_id = get_post_meta($post_id, '_whosright_id', true);
		if ($wr_id == '') {
			if ($data['new_poll'] == 1) {
				$response = $whosright_api->addPoll($data);
				if ($response[0] == '[' || $response[0] == '{') {
					$response_json = json_decode($response, true);
					if (isset($response_json['error'])) {
						update_post_meta($post_id, '_whosright_error', $response_json['error']);
					} else {
						delete_post_meta($post_id, "_whosright_autogenerated");
						update_post_meta($post_id, "_whosright_id", $response_json['id']);
					}
				} else {
					update_post_meta($post_id, '_whosright_error', $response);
				}
			} else {
				$post_data = get_post($post_id, OBJECT);
				$data = array();
				$data['title'] = $post_data->post_title;
				$data['attach_media'] = '';
				$data['desc'] = html_entity_decode($post_data->post_content);
				$data['tags'] = str_replace(' ', ',', $post_data->post_title);
				$data['option_1'] = 'Like';
				$data['attach_media_1'] = '';
				$data['option_2'] = 'Dislike';
				$data['attach_media_2'] = '';
				$data['category'] = 0;
				update_post_meta($post_id, "_whosright_autogenerated", 1);
				//echo 'generated default autogenerated post';

				//echo 'adding poll';
				$response = $whosright_api->addPoll($data);
				if ($response[0] == '[' || $response[0] == '{') {
					$response_json = json_decode($response, true);
					if (isset($response_json['error'])) {
						update_post_meta($post_id, '_whosright_error', $response_json['error']);
					} else {
						update_post_meta($post_id, "_whosright_id", $response_json['id']);
					}
				} else {
					update_post_meta($post_id, '_whosright_error', $response);
				}
			}
		} else {
			//echo 'publish: deleteing autogen from poll='.$wr_id;
			delete_post_meta($post_id, "_whosright_autogenerated");
		}
		//echo $response;
		//exit();
	}
	
	

	function wr_plugin_action_links($links, $file) {
		$plugin_file = basename(__FILE__);
		if (basename($file) == $plugin_file) {
			$settings_link = '<a href="options-general.php?page=wr_settings">'.__('Settings', 'whosright-polling-system').'</a>';
			array_unshift($links, $settings_link);
		}
		return $links;
	}
	add_filter('plugin_action_links', 'wr_plugin_action_links', 10, 2);

	function wr_manage() {
		if (isset($_POST['whosright_api_key'])) {
			update_option('whosright_api_key', addslashes($_POST['whosright_api_key']));
		}
		if (isset($_POST['whosright_api_token'])) {
			update_option('whosright_api_token', addslashes($_POST['whosright_api_token']));
		}
		if (isset($_POST['whosright_api_host'])) {
			update_option('whosright_api_host', addslashes($_POST['whosright_api_host']));
		}
		if (isset($_POST['whosright_disable_comments'])) {
			update_option('whosright_disable_comments', 1);
		} else {
			update_option('whosright_disable_comments', 0);
		}

		if (get_option('whosright_api_key') && get_option('whosright_api_token')) {
			global $whosright_api;
			$whosright_api = new WhosRightApiV1(get_option('whosright_api_key'), get_option('whosright_api_token'), get_option('whosright_api_host').'/api/v1/');
			$admin_json = $whosright_api->getAdmin();
			$admin = json_decode($admin_json, true);
			//echo $admin;
			//echo '<pre>';
			//print_r($admin);
		}

		require_once('admin/settings.php');
	}
	function wr_add_pages() {
		add_options_page('Whosright Settings', 'Whosright', 'manage_options', 'wr_settings', 'wr_manage');
	}
	add_action('admin_menu', 'wr_add_pages', 10);

	add_action('the_content', 'wr_the_content');
	$wr_poll = null;
	function wr_the_content($content) {
		global $post;
		global $wr_poll;
		$wr_poll = new WhosrightPoll($post->ID);
		$wr_poll->render_poll();
		return $content;
	}

	add_action('comments_template', 'wr_comments');
	function wr_comments($value) {
		if (get_option('whosright_disable_comments', false) == false) {
			global $wr_poll;
			if ($wr_poll) {
				return dirname(__FILE__).'/comments.php';
			}
		}
		return $value;
	}
?>